import{a as r}from"./index-t--hEgTQ.js";import{e as s}from"./index-bioeAiyt.js";const v=()=>({getMateriReport:a=>new Promise((n,t)=>{r.post(`${s.baseEnd}/test/report/materi`,a,{headers:s.headerSet}).then(e=>{n(e.data.data)}).catch(e=>{t(e.response.data.message)})}),getTestParticipantsByInstance:a=>new Promise((n,t)=>{r.post(`${s.baseEnd}/test/participants/byinstance/get`,a,{headers:s.headerSet}).then(e=>{n(e.data.data)}).catch(e=>{t(e.response.data.message)})}),getTestReports:a=>new Promise((n,t)=>{r.post(`${s.baseEnd}/test/report/get`,a,{headers:s.headerSet}).then(e=>{n(e.data.data)}).catch(e=>{t(e.response.data.message)})}),updateRandomize:a=>new Promise((n,t)=>{r.post(`${s.baseEnd}/test/update/randomize`,a,{headers:s.headerSet}).then(e=>{n(e.data)}).catch(e=>{t(e.response.data.message)})}),createSession:a=>new Promise((n,t)=>{r.post(`${s.baseEnd}/test/create`,a,{headers:s.headerSet}).then(e=>{n(e.data)}).catch(e=>{t(e.response.data.message)})}),getSessions:()=>new Promise((a,n)=>{r.get(`${s.baseEnd}/test/get`,{headers:s.headerSet}).then(t=>{a(t.data.data)}).catch(t=>{n(t.response.data.message)})}),deleteSession:a=>new Promise((n,t)=>{r.post(`${s.baseEnd}/test/delete`,a,{headers:s.headerSet}).then(e=>{n(e.data)}).catch(e=>{t(e.response.data.message)})}),updateTestSoal:a=>new Promise((n,t)=>{r.post(`${s.baseEnd}/test/update/soal`,a,{headers:s.headerSet}).then(e=>{n(e.data)}).catch(e=>{t(e.response.data.message)})}),updateSessionName:a=>new Promise((n,t)=>{r.post(`${s.baseEnd}/test/update/name`,a,{headers:s.headerSet}).then(e=>{n(e.data)}).catch(e=>{t(e.response.data.message)})}),updateTestInstance:a=>new Promise((n,t)=>{r.post(`${s.baseEnd}/test/update/instance`,a,{headers:s.headerSet}).then(e=>{n(e.data)}).catch(e=>{t(e.response.data.message)})}),updateSessionDesc:a=>new Promise((n,t)=>{r.post(`${s.baseEnd}/test/update/description`,a,{headers:s.headerSet}).then(e=>{n(e.data)}).catch(e=>{t(e.response.data.message)})}),updateSessionTimeLimit:a=>new Promise((n,t)=>{r.post(`${s.baseEnd}/test/update/timelimit`,a,{headers:s.headerSet}).then(e=>{n(e.data)}).catch(e=>{t(e.response.data.message)})}),updateSessionPassword:a=>new Promise((n,t)=>{r.post(`${s.baseEnd}/test/update/password`,a,{headers:s.headerSet}).then(e=>{n(e.data)}).catch(e=>{t(e.response.data.message)})}),verifyPassword:a=>new Promise((n,t)=>{r.post(`${s.baseEnd}/test/verify/password`,a,{headers:s.headerSet}).then(e=>{n(e.data)}).catch(e=>{t(e.response.data.message)})}),startAssesment:a=>new Promise((n,t)=>{r.post(`${s.baseEnd}/test/start`,a,{headers:s.headerSet}).then(e=>{n(e.data.data)}).catch(e=>{t(e.response.data.message)})}),getUserSessions:a=>new Promise((n,t)=>{r.post(`${s.baseEnd}/test/user/sessions`,a,{headers:s.headerSet}).then(e=>{n(e.data.data)}).catch(e=>{t(e.response.data.message)})}),getSoalData:a=>new Promise((n,t)=>{r.post(`${s.baseEnd}/test/get/soal`,a,{headers:s.headerSet}).then(e=>{n(e.data.data)}).catch(e=>{t(e.response.data.message)})}),updateAccess:a=>new Promise((n,t)=>{r.post(`${s.baseEnd}/test/update/access`,a,{headers:s.headerSet}).then(e=>{n(e.data)}).catch(e=>{t(e.response.data.message)})})});export{v as t};
